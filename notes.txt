--PAGE ACCUEIL
Ajouter de manière dynamique l'étagère en JS.
Pour la barre de recherche (formulaire type form) :
-> Prendre en compte les trois types de données simultanément. 
-> Si une des cases est vide, prendre en compte la totalité des données non sélectionnées
-> Si aucune info renvoyé : message

-- PAGE PROFIL
Pour vérifier si les modifications sont à prendre en compte :
-> Si bouton d'édition cliqué : retirer "disabled" et permettre la modification de donnée
-> Si bouton valider cliqué : vérifier le type de donné récupéré (formatage) avec JS, si correct, envoyé les données via AJAX
-> Si bouton annuler cliqué : remettre les informations de base et les input en "disabled"


last version notes (march):
- Ajouter accueil dans la nav du site
- Accueil dans le dashboard en dehors du menu
- Highlight les onglets de gestion dans le dashboard
- Indiquer un bouton "retirer le livre" si déjà ajouté
- Changer la fonction JS du controller
- Remplacer les alerts JS par des modals personnalisées 
- Ajouter les commentaires et critiques de façon dynamique dans l'espace commentaire

Profil modification:

let inputName;
let inputEmail;
let inputPswd;
const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

function edition(e){
    let icon = e.querySelector("i");
    let input = e.previousElementSibling;
    console.log(input);
    if(icon.classList.contains("bi-pencil-square")){
        editStyle(input, icon, "validemode");
    }else{
        if(input.type === "text"){
            if(input.value.length < 5){
                console.log("Le pseudo doit contenir au minimum 5 caractères");
            }else{
                editStyle(input, icon, "editionmode");
            }
        }
        else if(input.type === "email"){
            if(!emailRegex.test(input.value)){
                console.log("entrez une adresse mail valide");
            }
        }
        else if(input.type === "password"){
            if(input.value.length < 10){
                console.log("Le mot de passe doit contenir au moins 10 caractères");
            }
        }
    }
}

function editStyle(input, icon, state){
    if(state == "edit"){
        icon.classList.remove("bi-check-square-fill");
        icon.classList.add("bi-pencil-square");
        icon.style.color = "#b17f4a";
        input.classList.remove("validate");
        input.classList.add("disabled-style");
        input.setAttribute('disabled', '');
    }else{
        icon.classList.remove("bi-pencil-square");
        icon.classList.add("bi-check-square-fill");
        icon.style.color = "#2c3638";
        input.classList.remove("disabled-style");
        input.classList.add("validate");
        input.removeAttribute('disabled');
    }
    
}

function refresh(){
    location.reload();
}
